mixin picture({src, alt}, {className, lazyLoad=true, altOverwrite} = {})
    - const createSrcset = (...images) => images.map(img => `${img.src} ${img.width}w`).join(', ');
    - const images = IMAGE_META[src];
    - const srcset = createSrcset(images.default, images.large);
    - const srcsetWebp = createSrcset(images.defaultWebp, images.largeWebp);
    - const srcsetPlaceholder = `${CONSTANTS.SINGLE_PIXEL_TRANSPARENT} 1w`;
    - const pageMaxWidth = 960; /* from variables.less */
    - const sizes = `(min-width: ${pageMaxWidth}px) ${pageMaxWidth}px, 100vw`;

    div(
        style=`padding-bottom: ${images.default.paddingBottom};`
        class=`${className} image-wrapper ${lazyLoad ? 'lazyload-wrapper' : ''}`.trim()
    )

        picture
            source(
                type="image/webp"
                sizes=sizes
            )&attributes(
                lazyLoad
                    ? {
                        'data-srcset': srcsetWebp,
                        'srcset': srcsetPlaceholder
                    }
                    : {
                        'srcset': srcsetWebp
                    }
            )
            img(
                alt=altOverwrite !== undefined ? altOverwrite : alt
                sizes=sizes
            )&attributes(
                lazyLoad
                    ? {
                        'class': 'lazyload',
                        'data-src': images.default.src,
                        'data-srcset': srcset,
                        'srcset': srcsetPlaceholder,
                        'src': CONSTANTS.SINGLE_PIXEL_TRANSPARENT
                    }
                    : {
                        'src': images.default.src,
                        'srcset': srcset
                    }
            )
