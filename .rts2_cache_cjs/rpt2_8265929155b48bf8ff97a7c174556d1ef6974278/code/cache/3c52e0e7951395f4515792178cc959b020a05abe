{"code":"// @ts-nocheck\nimport PhotoSwipe from '@dlevs/photoswipe';\nimport queryString from 'query-string';\nimport PhotoSwipeUI from './photoswipeUi';\nimport { $, getLastInputDevice, focusWithoutScrolling } from '../utils';\nconst SLIDE_SELECTOR = '.js-photoswipe';\n/**\n * Get the link elements that wrap the thumbnail images of a gallery.\n */\nconst getSlides = () => $(SLIDE_SELECTOR);\n/**\n * Get the `options.items` value expected by PhotoSwipe from an\n * array of thumbnail links.\n */\nconst getGalleryItems = (slides) => {\n    // Check first thumbnail format.\n    const firstThumbnail = slides[0].getElementsByTagName('img')[0];\n    const isWebp = /\\.webp$/.test(firstThumbnail.currentSrc);\n    return slides.map((elem, i) => {\n        const thumbnail = elem.getElementsByTagName('img')[0];\n        const caption = elem.getElementsByTagName('figcaption')[0];\n        return {\n            pid: i + 1,\n            src: isWebp ? elem.getAttribute('data-href-webp') : elem.href,\n            msrc: thumbnail.currentSrc || thumbnail.src,\n            thumbnail,\n            w: Number(elem.getAttribute('data-width')),\n            h: Number(elem.getAttribute('data-height')),\n            mapLink: elem.getAttribute('data-map-link'),\n            title: elem.getAttribute('data-caption') || (caption && caption.textContent),\n        };\n    });\n};\n/**\n * For accessibility, add text to link titles to indicate that clicking\n * will open the gallery.\n */\nconst applyTitlesToSlides = (slides) => {\n    slides.forEach((link) => {\n        const textToAppend = 'View in gallery (opens dialog)';\n        // eslint-disable-next-line no-param-reassign\n        link.title = link.title\n            ? `${link.title} - ${textToAppend}`\n            : textToAppend;\n    });\n};\n/**\n * Make all thumbnails visible.\n */\nconst showAllThumbnails = (gallery) => {\n    gallery.items.forEach(({ thumbnail }) => {\n        thumbnail.classList.remove('invisible');\n    });\n};\n/**\n * Make the current active thumbnail invisible.\n *\n * This is useful to prevent 2 images from showing on opening/closing the gallery:\n * - The original thumbnail\n * - The gallery image which expands/shrinks over the thumbnail\n *\n * By hiding the first of these, it creates the effect of a single image expanding/shrinking.\n */\nconst hideActiveThumbnail = (gallery) => {\n    showAllThumbnails(gallery);\n    gallery.currItem.thumbnail.classList.add('invisible');\n};\n/**\n * Get the default options for a PhotoSwipe gallery\n *\n * The gallery is not initialized at the point where this function is\n * expected to be called, but some of the callback functions defined\n * in the options require it. This is provided via the `getGallery`\n * parameter.\n */\nconst getDefaultOptions = getGallery => ({\n    index: 0,\n    getThumbBoundsFn: (currentIndex) => {\n        const pageYScroll = window.pageYOffset || document.documentElement.scrollTop;\n        const rect = getGallery().items[currentIndex].thumbnail.getBoundingClientRect();\n        return {\n            x: Math.round(rect.left),\n            y: Math.round(rect.top + pageYScroll),\n            w: Math.round(rect.width),\n        };\n    },\n    getDoubleTapZoom: (isMouseClick, item) => {\n        const fullSizeScale = 1 / (window.devicePixelRatio || 1);\n        // If screen has high pixel density, we don't want to shrink the\n        // image on \"zooming\", so check this.\n        return fullSizeScale < item.initialZoomLevel\n            ? item.initialZoomLevel * 1.5\n            : fullSizeScale;\n    },\n    getPageURLForShare() {\n        const { protocol, host, pathname, search, hash, } = window.location;\n        const newSearch = queryString.stringify({\n            ...queryString.parse(search),\n            pid: getGallery().currItem.pid,\n        });\n        // Appends the \"pid\" value to the query string, so it can\n        // be used on backend to set the sharing image.\n        return `${protocol}//${host}${pathname}?${newSearch}${hash}`;\n    },\n});\n/**\n * Create an instance of PhotoSwipe and immediately open it.\n */\nconst openGallery = (userOptions) => {\n    const focusedElementBeforeOpening = document.activeElement;\n    const items = getGalleryItems(getSlides());\n    const options = {\n        // eslint-disable-next-line no-use-before-define\n        ...getDefaultOptions(() => gallery),\n        ...userOptions,\n    };\n    const gallery = new PhotoSwipe(document.querySelector('.pswp'), PhotoSwipeUI, items, options);\n    let isInitialSlide = true;\n    gallery.listen('imageLoadComplete', (index) => {\n        // Image load complete for the placeholder that expands over thumbnail.\n        // Make the thumbnail below invisible so the element appears to move.\n        if (isInitialSlide && index === options.index) {\n            hideActiveThumbnail(gallery);\n            isInitialSlide = false;\n        }\n    });\n    gallery.listen('beforeChange', () => {\n        // Make thumbnail for current slide invisible.\n        // Must omit on PhotoSwipe init as expanding placeholder may not yet be loaded.\n        if (!isInitialSlide) {\n            hideActiveThumbnail(gallery);\n        }\n    });\n    gallery.listen('destroy', () => {\n        showAllThumbnails(gallery);\n        // Refocus last element on gallery close for accessibility\n        if (getLastInputDevice() === 'keyboard') {\n            focusWithoutScrolling(focusedElementBeforeOpening);\n        }\n    });\n    gallery.init();\n    applyGalleryTracking(gallery);\n};\n/**\n * Opens the photoswipe gallery when clicking a link with the \"js-photoswipe\"\n * class. All images with class \"js-photoswipe\" are included in the gallery.\n *\n * The link should have a href for a larger version of the image that it wraps.\n *\n * e.g.\n * <a href=\"foo_large.jpg\" class=\"js-photoswipe\" data-width=\"1000\" data-height=\"600\">\n *     <img src=\"foo.jpg\" alt=\"Foo\" />\n * </a>\n */\nconst onThumbnailClick = (event) => {\n    const imgLink = event.target.closest(SLIDE_SELECTOR);\n    if (!imgLink)\n        return;\n    event.preventDefault();\n    const index = getSlides().indexOf(imgLink);\n    openGallery({ index });\n};\n/**\n * If there are relevant parameters in the current URL's hash,\n * open the gallery at the defined index.\n */\nconst openGalleryFromHash = () => {\n    const { pid } = queryString.parse(window.location.hash);\n    if (pid === undefined)\n        return;\n    openGallery({\n        index: Number(pid) - 1,\n        showAnimationDuration: 0,\n    });\n};\nconst init = () => {\n    document.addEventListener('click', onThumbnailClick);\n    openGalleryFromHash();\n    applyTitlesToSlides(getSlides());\n};\nexport default init;\n//# sourceMappingURL=photoswipeSetup.js.map","map":"{\"version\":3,\"file\":\"photoswipeSetup.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../publicSrc/scripts/includes/photoswipe/photoswipeSetup.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/daniellevett/Projects/dlevs.com/publicSrc/scripts/includes/photoswipe/photoswipeSetup.d.ts","writeByteOrderMark":false,"text":"declare const init: () => void;\nexport default init;\n"}}
